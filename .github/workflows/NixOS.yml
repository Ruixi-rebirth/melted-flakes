name: NixOS
#concurrency:
on:
  push:
    branches: [minimal]
  pull_request:
    branches: [minimal]
jobs:
  build-laptop-minimal:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # when set to "true" but frees about 6 GB
          tool-cache: true

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: "Create Dir for Mounting moar Disk Space ❄"
        run: |
          sudo mkdir /nix
      - name: "Maximize Disk Space"
        uses: easimon/maximize-build-space@v8
        with:
          build-mount-path: /nix
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          temp-reserve-mb: "100"
          swap-size-mb: "4096"
          root-reserve-mb: "1024"

      - uses: actions/checkout@v3

      - name: "Install Nix ❄️"
        uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix flake check

      - name: "Install Cachix ❄️"
        uses: cachix/cachix-action@v14
        with:
          name: ruixi-rebirth
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          extraPullNames: nix-community

      - name: "Build NixOS config ❄️"
        run: |
          # nix build .#nixosConfigurations.laptop-minimal.config.system.build.toplevel 
          nix --experimental-features 'nix-command flakes' build -L '.#nixosConfigurations.laptop-minimal.config.system.build.toplevel'
          # sudo nix build --profile /nix/var/nix/profiles/system "$(readlink -f result)"
          # sudo nix shell -vv "$(readlink -f result)" -c switch-to-configuration switch

      - name: "Print nixpkgs version ❄️"
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
      - name: "Check free space"
        run: |
          sudo apt install neofetch
          neofetch
          echo "Free space:"
          df -h
